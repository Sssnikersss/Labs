#define _CRT_SECURE_NO_DEPRECATE
#include <stdio.h>
#include <locale.h>
#include <math.h>


struct point {
	float x;
	float y;
	char name;
};

typedef struct point Point;

void put_point(Point z);
float dist(Point z, Point w);
Point seredina(Point z, Point w);

int main() {
	setlocale(LC_ALL, "RUS");
	int r = 0;

	Point b, a, k;
	a = (Point){ 1.f, 2.f, 'A' };
	b.name = 'B'; b.x = 5, b.y = -3;
	put_point(a);
	put_point(b);
	printf("Расстояние между точками:%.1f\n", dist(b, a));
	seredina(a, b);
	chetvert(b);
	chetvert(a);
	putchar('\n');
	printf("Выберите операцию:\n1)Вывести расстояние между точками a и b;\n2).Вывести информацию о точках a и b;\n3).Определить, к какой четверти принадлежит a и b;\n4).Вывести координаты середины отрезка ab.\n");
	scanf("%d", &r);
	putchar('\n');
	switch (r) {
	case 1:
		printf("%.1f\n", dist(b, a));
		break;
	case 2:
		put_point(a);
		put_point(b);
		break;
	case 3:
		printf("a:");
		chetvert(a);
		printf("b:");
		chetvert(b);
		break;
	case 4:
		seredina(a, b);
		break;
	default:
		printf("Ошибка\n");
	}
}

void put_point(Point z) {
	printf("point %c (%.1f, %.1f)\n", z.name, z.x, z.y);
}
float dist(Point z, Point w) {
	return sqrt(pow(z.x - w.x, 2) + pow(z.y - w.y, 2));
}
Point seredina(Point z, Point w) {
	k = (Point){ (z.x + w.x) / 2, (z.y + w.y) / 2, 'K'};
	return k;
}
int chetvert(Point z) {
	if ((z.x > 0) && (z.y > 0)) printf("Точка находится в первой четверти\n");
	 else if ((z.x < 0) && (z.y > 0)) printf("Точка находится во второй четверти\n");
	  else if ((z.x < 0) && (z.y < 0)) printf("Точка находится в третьей четверти\n");
	   else if ((z.x > 0) && (z.y < 0)) printf("Точка находится в четвёртой четверти\n");
}
